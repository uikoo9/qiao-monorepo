var qiao	= require('../../../util/qiao.sutil.js');
var model	= require('../model/{{className1}}Model.js');

/**
 * {{tableName1}} {{tableName2}} list
 */
exports.{{className2}}List = async function(req, res){
	// vars
	{{each params}}
	var {{$value.name2}} = req.body.{{$value.name2}};
	{{/each}}
		
	// sql and params
	var sqlcount	= [model.sql.{{className2}}ListCount];
	var paramscount	= [];
	
	var sqlquery	= [model.sql.{{className2}}ListQuery];
	var paramsquery	= [];
	
	// query
	{{each params}}
	if({{$value.name2}}){
		sqlcount.push(' and t.{{$value.name1}} = ?');
		paramscount.push({{$value.name2}});
		
		sqlquery.push(" and t.{{$value.name1}} = ?");
		paramsquery.push({{$value.name2}});
	}
	{{/each}}
	
	// page
	var pagesize	= parseInt(req.body.pagesize || 10);
	var pagenumber	= parseInt(req.body.pagenumber || 1);
	var start		= (pagenumber - 1) * pagesize;
	sqlquery.push(' order by t.udate desc limit ?,?');
	paramsquery.push(start);
	paramsquery.push(pagesize);
	
	// db
	try{
		var rs 		= await qiao.db.mysql.query(sqlcount.join(''), paramscount);
		var rows 	= await qiao.db.mysql.query(sqlquery.join(''), paramsquery);
		
		// result
		var result = {};
		result.count 		= rs[0]['tcount'];
		result.rows 		= rows;
		result.sumpage 		= Math.ceil(result.count / pagesize);
		result.pagenumber 	= pagenumber;
		result.pagesize		= pagesize;
		
		res.send(qiao.j.success('query success', result));
	}catch(e){
		res.send(qiao.j.danger('query failed', {e:e}));
	}
};

/**
 * {{tableName1}} {{tableName2}} get
 */
exports.{{className2}}Get = async function(req, res){
	// check
	if(!req.body){
		res.send(qiao.j.danger('缺少参数！'));
		return;
	}
	if(!req.body.id){
		res.send(qiao.j.danger('缺少参数id！'));
		return;
	}
	
	// db
	try{
		var rows = await model.{{className2}}GetById(req.body.id);
		
		res.send(qiao.j.success('query success', {rows:rows}));
	}catch(e){
		res.send(qiao.j.danger('query failed', {e:e}));
	}
};

/**
 * {{tableName1}} {{tableName2}} save
 */
exports.{{className2}}Save = async function(req, res){
	// check
	if(!req.body){
		res.send(qiao.j.danger('缺少参数！'));
		return;
	}
	
	{{each params}}
	if(!req.body.{{$value.name2}}){
		res.send(qiao.j.danger('缺少参数{{$value.name2}}！'));
		return;
	}
	{{/each}}
	
	// vars
	var id = req.body.id;
	{{each params}}
	var {{$value.name2}} = req.body.{{$value.name2}};
	{{/each}}
	
	// db
	try{
		var params = [];
		
		if(!id){
			{{each params}}
			params.push({{$value.name2}});
			{{/each}}
			params.push(2);
			params.push('admin');
			params.push(2);
			params.push('admin');
			
			await model.{{className2}}Add(params);
		}else{
			{{each params}}
			params.push({{$value.name2}});
			{{/each}}
			params.push(2);
			params.push('admin');
			params.push(id);
			
			await model.{{className2}}Edit(params);
		}
		
		res.send(qiao.j.success('save success'));
	}catch(e){
		res.send(qiao.j.danger('save failed', {e:e}));
	}
};

/**
 * {{tableName1}} {{tableName2}} del
 */
exports.{{className2}}Del = async function(req, res){
	// check
	if(!req.body){
		res.send(qiao.j.danger('缺少参数！'));
		return;
	}
	if(!req.body.ids){
		res.send(qiao.j.danger('缺少参数ids！'));
		return;
	}
	
	// db
	try{
		await model.{{className2}}Del(req.body.ids.split(','));
		res.send(qiao.j.success('del success'));
	}catch(e){
		res.send(qiao.j.danger('del failed', {e:e}));
	}
};