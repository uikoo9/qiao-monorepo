#!/usr/bin/env node

'use strict';

var qiao = require('qiao.util.all');

// cmd
qiao.cli.cmd
	.version(require('../package.json').version, '-v, --version')
	.description('qiao.plugin.coder, generate server and browser code.')
	.usage('[options] <command>')
	.command('gen <code> <path>')
	.alias('g')
	.option('-i --init', 'init code')
	.option('-t --table <name>', 'input table name')
	.action(handleCode);

// parse
qiao.cli.cmd.parse(process.argv);

// handle code
function handleCode(code, path, options){
	// vars
	var init 		= options.init;
	var tableName	= options.table;
	
	// check options
	if(!init && !tableName){
		console.log('need options, use -h or --help to see help info');
		return;
	}
	
	// init code
	if(init){
		console.log('init code');
		return;
	}
	
	// gen code
	var codes = ['01', '02'];
	if(isIn(code, codes)){
		require('../codes/' + code + '/coder.js').gen(path, tableName);
		return;
	}
	
	console.log('error code, see: https://github.com/insistime/qiao.plugin.coder#code-list');
}

// is in
function isIn(s, ss){
	for(var i=0; i<ss.length; i++){
		if(s == ss[i]) return true;
	}
	
	return false;
}