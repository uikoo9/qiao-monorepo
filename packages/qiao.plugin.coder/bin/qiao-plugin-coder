#!/usr/bin/env node

'use strict';

var inquirer 		= require('inquirer');
var qiaoPluginCli	= require('qiao.plugin.cli');
var qiaoPluginCoder = require('../lib/qiao.plugin.coder.js');

// init
async function init(){
	var typeAnswers = await qiaoPluginCli.ask([{
	    type	: 'list',
	    name	: 'type',
	    message	: 'What type of code do you want to generate?',
	    choices	: ['front', 'server', 'manage']
	}]);
	
	if(typeAnswers.type == 'front') genFrontCode();
	if(typeAnswers.type == 'server') genServerCode();
	if(typeAnswers.type == 'manage') genManageCode();
}

// gen front code
async function genFrontCode(answers){
	var frontAnswers = await qiaoPluginCli.ask([{
		type		: 'input',
		name		: 'code',
		message		: 'Input code number, see:https://github.com/insistime/qiao.plugin.coder#frontCode',
		validate	: function(input){
			var done = this.async();
			
			if(!input){
				done('need code number');
		        return;
			}
			
			done(null, true);
		}
	}]);
	
	console.log('https://github.com/insistime/qiao.plugin.coder#' + frontAnswers.code);
}

// gen server code
async function genServerCode(){
	var serverAnswers = await qiaoPluginCli.ask([{
		type		: 'input',
		name		: 'tableName',
		message		: 'Input table name:',
		validate	: function(input){
			var done = this.async();
			
			if(!input){
				done('need table name');
		        return;
			}
			
			done(null, true);
		}
	},{
	    type		: 'input',
	    name		: 'destFolder',
	    message		: 'Input destination folder path:',
	    validate	: function(input){
			var done = this.async();
			
			if(!input){
				done('need destination folder path');
		        return;
			}
			
			done(null, true);
		}
	}]);
	
	var destFolder 	= serverAnswers.destFolder;
	var tableName	= serverAnswers.tableName;
	qiaoPluginCoder.genServerCode(destFolder, tableName);
}

// gen manage code
function genManageCode(){
	console.log('todo');
}

// init
init();