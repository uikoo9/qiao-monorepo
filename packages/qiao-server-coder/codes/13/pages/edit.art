// react
import React, { forwardRef, useState, useImperativeHandle } from 'react';

// ui
import { Modal, Input, Button, Tips } from 'qiao-ui';

// {{tableName1}} service
import { {{className2}}Save } from '{{tableName1}}-service';

/**
 * {{tableName1}} {{tableName2}} edit
 */
export const {{className1}}Edit = forwardRef((props, ref) => {
    console.log('{{tableName1}}-view/src/{{tableName1}}-{{tableName2}}-edit: render');

    // state 
    const [show, setShow] = useState(false);
    const [tips, setTips] = useState('');

    const [id, setId] = useState('');
    {{each params}}const [{{$value.name2}}, set{{$value.name3}}] = useState('');
    {{/each}}
    // modal
    useImperativeHandle(ref, () => ({
        modalShow: (row) => {
            console.log('{{tableName1}}-view/src/{{tableName1}}-{{tableName2}}-edit: modalShow');

            row = row || {};
            setShow(true);
            setTips('');
            setId(row.id || '');
            {{each params}}set{{$value.name3}}(row.{{$value.name1}} || '');
            {{/each}}
        }
    }));

    // save
    const saveClick = async () => {
        console.log('{{tableName1}}-view/src/{{tableName1}}-{{tableName2}}-edit: saveClick');

        // data
        const data = {
            id: id,
            {{each params}}{{$value.name2}}: {{$value.name2}},
            {{/each}}
        };

        // save
        const res = await {{className2}}Save(data);
        if (!res || res.type != 'success') {
            setTips(res.msg);
            return;
        }

        // reload
        setShow(false);
        props.reload();
    };

    // tips
    const finalTips = tips ? <Tips tips={tips} /> : null;

    // return
    return <Modal
        width="300px"
        show={ show }
        closeModal={ () => { setShow(false) } }
    >
        <Input
            type="hidden"
            value={ id }
        />
        {{each params}}
        <Input
            type="text"
            placeholder="{{$value.name2}}"
            value={ {{$value.name2}} }
            onChange={ (e) => { set{{$value.name3}}(e.target.value) } }
        />{{/each}}
        <Button
            onClick={ saveClick }
            text="submit"
        />
        { finalTips }
    </Modal>;
});